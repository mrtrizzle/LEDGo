import numpy as np
import time
from Matrix import Matrix


chars = {
    "A": [[1,1,1,1],
          [1,0,0,1],
          [1,0,0,1],
          [1,1,1,1],
          [1,0,0,1],
          [1,0,0,1]],

    "B": [[1,1,1,0],
          [1,0,0,1],
          [1,1,1,0],
          [1,0,0,1],
          [1,0,0,1],
          [1,1,1,0]],

    "C": [[0,1,1,1],
          [1,0,0,0],
          [1,0,0,0],
          [1,0,0,0],
          [1,0,0,0],
          [0,1,1,1]],

    "D": [[1,1,1,0],
          [1,0,0,1],
          [1,0,0,1],
          [1,0,0,1],
          [1,0,0,1],
          [1,1,1,0]],
    
    "E": [[1,1,1],
          [1,0,0],
          [1,1,0],
          [1,0,0],
          [1,0,0],
          [1,1,1]],
    
    "F": [[1,1,1],
          [1,0,0],
          [1,1,0],
          [1,0,0],
          [1,0,0],
          [1,0,0]],
    
    "G": [[0,1,1,0],
          [1,0,0,1],
          [1,0,0,0],
          [1,0,1,1],
          [1,0,0,1],
          [0,1,1,0]],
    
    "H": [[1,0,0,1],
          [1,0,0,1],
          [1,1,1,1],
          [1,0,0,1],
          [1,0,0,1],
          [1,0,0,1]],
    
    "I": [[1],
          [1],
          [1],
          [1],
          [1],
          [1]],
              
    "J": [[1,1,1],
          [0,0,1],
          [0,0,1],
          [0,0,1],
          [1,0,1],
          [0,1,0]],
                        
    "K": [[1,0,0,1],
          [1,0,1,0],
          [1,1,0,0],
          [1,0,1,0],
          [1,0,0,1],
          [1,0,0,1]],
                        
    "L": [[1,0,0],
          [1,0,0],
          [1,0,0],
          [1,0,0],
          [1,0,0],
          [1,1,1]],
                        
    "M": [[1,0,0,0,1],
          [1,1,0,1,1],
          [1,0,1,0,1],
          [1,0,0,0,1],
          [1,0,0,0,1],
          [1,0,0,0,1]],
                        
    "N": [[1,0,0,0,1],
          [1,1,0,0,1],
          [1,0,1,0,1],
          [1,0,0,1,1],
          [1,0,0,0,1],
          [1,0,0,0,1]],
                        
    "O": [[0,1,1,0],
          [1,0,0,1],
          [1,0,0,1],
          [1,0,0,1],
          [1,0,0,1],
          [0,1,1,0]],
                        
    "P": [[1,1,1,0],
          [1,0,0,1],
          [1,0,0,1],
          [1,1,1,0],
          [1,0,0,0],
          [1,0,0,0]],
                        
    "Q": [[0,1,1,0],
          [1,0,0,1],
          [1,0,0,1],
          [1,0,0,1],
          [0,1,1,0],
          [0,0,0,1]],
                        
    "R": [[1,1,1,0],
          [1,0,0,1],
          [1,1,1,0],
          [1,1,0,0],
          [1,0,1,0],
          [1,0,0,1]],
                        
    "S": [[1,1,1],
          [1,0,0],
          [1,1,1],
          [0,0,1],
          [0,0,1],
          [1,1,1]],
                        
    "T": [[1,1,1],
          [0,1,0],
          [0,1,0],
          [0,1,0],
          [0,1,0],
          [0,1,0]],
                        
    "U": [[1,0,0,1],
          [1,0,0,1],
          [1,0,0,1],
          [1,0,0,1],
          [1,0,0,1],
          [0,1,1,0]],
                        
    "V": [[1,0,1],
          [1,0,1],
          [1,0,1],
          [1,0,1],
          [1,1,0],
          [1,0,0]],
                        
    "W": [[1,0,0,0,1],
          [1,0,0,0,1],
          [1,0,1,0,1],
          [1,0,1,0,1],
          [1,0,1,0,1],
          [0,1,0,1,0]],
                        
    "X": [[1,0,1],
          [1,0,1],
          [0,1,0],
          [1,0,1],
          [1,0,1],
          [1,0,1]],
                        
    "Y": [[1,0,1],
          [1,0,1],
          [0,1,0],
          [0,1,0],
          [0,1,0],
          [0,1,0]],
                        
    "Z": [[1,1,1,1],
          [0,0,0,1],
          [0,0,1,0],
          [0,1,0,0],
          [1,0,0,0],
          [1,1,1,1]],

    " ": [[0],
          [0],
          [0],
          [0],
          [0],
          [0]]
}


def construct_pixel_text(txt):
    px = np.zeros((6,1))
    for char in txt:
        px = np.append(px, chars[char], axis=1)
        px = np.append(px, chars[" "], axis=1)

    return px

def pixel_text_to_matrix(px):
    window_at = 0
    window_size = 8

    empty_mat = np.zeros((6,window_size))

    px_size = len(px[0])

    px = np.matrix(px)
    px = np.append(np.append(empty_mat,px, axis=1),empty_mat, axis=1)
    
    while True:
        window = px[:, window_at:window_at+window_size]
        
        send_to_matrix(window)
        
        time.sleep(0.1)
        window_at += 1
        # Turnaround
        if window_at == px_size+window_size:
            window_at = 0

def send_to_matrix(window):
    col = [125, 0, 125]
    img = np.zeros((8,8,3))

    window = np.rot90(window, k = 3)

    for x in range(8):
        for y in range(6):
            img[x,y+1] = col if window[x,y] == 1 else [50,50,50]

    matrix.mat = img
    # Double draw to prevent fading
    matrix.drawMatrix()
    matrix.drawMatrix()



if __name__ == "__main__":
    matrix = Matrix(8,8)
    txt= "GUTE NACHT"

    px = construct_pixel_text(txt)
    pixel_text_to_matrix(px)